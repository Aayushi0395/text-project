# Run as a less privileged user for security reasons.
user nginx;

# #worker_threads to run;
# "auto" sets it to the #CPU_cores available in the system, and
# offers the best performance.
worker_processes auto;

# increase the number of worker connections to 4096, default 1024
events {
    worker_connections 4096;
}

# thread pool support for multi-threading
# define a thread pool called default
thread_pool default threads=4 max_queue=65536;

http {

    # set the rate limiting parameter for nginx
    limit_req_zone $binary_remote_addr zone=mylimit:10m rate=50r/s;

    # add proxy caches for http requests
    proxy_cache_path /tmp/mycache keys_zone=mycache:10m loader_threshold=300 loader_files=200 max_size=50m;

    # Hide nginx version information.
    server_tokens off;

    autoindex on;
    sendfile on;
    tcp_nopush on;
    sendfile_max_chunk 512k;

    # timeout for connections
    keepalive_timeout 50;

    # turn off gzip compression; only enable if absolutely necessary
    gzip off;

    server {

        listen  80;
        root    /usr/share/nginx/html;
        include /etc/nginx/mime.types;
        # make the site accessible from http://localhost
        server_name _;

        ## apply the rate limiting config
        limit_req zone=mylimit burst=100 nodelay;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }

        # configure 403 and 404 error pages for nginx
        error_page 404 /404.html;
        error_page 403 /403.html;

        ## Enable threading support for nginx
        aio threads=default;

        ## reverse proxy config
        proxy_http_version 1.1;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host:$server_port;
        proxy_set_header X-Forwarded-Server $host;
        proxy_redirect off;

        ## cache settings
        proxy_cache mycache;
        proxy_cache_valid 200 300s;
        proxy_cache_lock on;

        ## enable nginx slicing
        slice              1m;
        proxy_cache_key    $host$uri$is_args$args$slice_range;
        proxy_set_header   Range $slice_range;

        # Immediately forward requests to the origin if we are filling the cache
        proxy_cache_lock_timeout 0s;

        # Set the 'age' to a value larger than the expected fill time
        proxy_cache_lock_age 20s;

        proxy_cache_use_stale updating;
    }
}
